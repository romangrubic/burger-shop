{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Layout/Layout.module.css","assets/images/Burger.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","axios-orders.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burger","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerTogglerClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDraw","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinue","spinner","Loader","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","console","log","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","validationError","ValidationError","elementConfig","placeholder","elementType","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","url","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","isEmail","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredients","reducer","initState","purchasedBurgerSuccess","newOrder","purchasedBurgerFail","purchaseBurgerStart","purchaseBurgerInit","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5adc836.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","module.exports = __webpack_public_path__ + \"static/media/Burger.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\",\"Input\":\"ContactData_Input__2fK5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"Input\":\"Auth_Input__2LQ-q\"};","const aux = (props) => props.children\n\nexport default aux;","import React from 'react';\nimport burger from '../../assets/images/Burger.png'\nimport classes from './Logo.module.css'\n\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burger} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.module.css';\n\n\nconst navigationItem = (props) => (\n    <li className={ classes.NavigationItem }>\n        <NavLink\n            exact\n            to={ props.link }\n            activeClassName={classes.active}>{ props.children }</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/burger-shop\">Burger builder</NavigationItem>\n        { props.isAuthenticated ? <NavigationItem link=\"/burger-shop/orders\">Orders</NavigationItem> : null}\n        { props.isAuthenticated ?\n        <NavigationItem link=\"/burger-shop/logout\">Log out</NavigationItem>\n         : <NavigationItem link=\"/burger-shop/auth\">Sign in</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css'\n\nconst drawerToggle = (props) => (\n    <div\n    className={classes.DrawerToggle}\n    onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={ classes.Toolbar }>\n        <DrawerToggle clicked={props.drawerTogglerClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Auxiliary';\n\nconst sideDrawer = (props) => {\n    let attachClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachClasses = [classes.SideDrawer, classes.Open];\n    }\n\n    return (\n        <Aux>\n            <Backdrop\n            show={props.open}\n            clicked={props.closed} />\n            <div className={attachClasses.join(\" \")}>\n                <div className={ classes.Logo }>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Aux from '../../hoc/Auxiliary';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDraw: false\n    }\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDraw: false })\n    }\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDraw: !prevState.showSideDraw}\n        });\n    }\n    render() {\n        return (\n            <Aux>\n                <Toolbar \n                isAuth = {this.props.isAuthenticated}\n                drawerTogglerClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer  \n                isAuth = {this.props.isAuthenticated}\n                closed={this.sideDrawerClosedHandler}\n                open={this.state.showSideDraw}/>\n                <main className={ classes.Content }>\n                    { this.props.children }\n                </main>\n            </Aux>)\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport classes from './BurgerIngredient.module.css'\n\nclass BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n\n    switch (this.props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={ classes.BreadBottom }></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={ classes.BreadTop }>\n                    <div className={ classes.Seeds1 }></div>\n                    <div className={ classes.Seeds2 }></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={ classes.Meat }></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={ classes.Cheese }></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={ classes.Salad }></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={ classes.Bacon }></div>;\n            break;\n        default:\n            ingredient = null\n\n    }\n    return ingredient;\n    }\n\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={ igKey + i } type={ igKey } />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please add ingredients!</p>\n    };\n    return (\n        <div className={ classes.Burger }>\n            <BurgerIngredient type=\"bread-top\" />\n            { transformedIngredients }\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;\n","import React from 'react';\nimport classes from './BuildControl.module.css'\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}>Less</button>\n        <button \n        className={classes.More}\n        onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl","import React from 'react';\nimport BuildControl from './BuildControl/BuildControl'\nimport classes from './BuildControls.module.css'\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n    <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n    { controls.map(ctrl => (\n        <BuildControl \n        key={ctrl.label} \n        label={ctrl.label}\n        added={() => props.ingredientAdded(ctrl.type)}\n        removed={() => props.ingredientRemoved(ctrl.type)}\n        disabled={props.disabled[ctrl.type]}/>\n    ))}\n    <button \n    className={classes.OrderButton}\n    disabled={!props.purchasable}\n    onClick={props.ordered}>{props.isAuth ? \"ORDER NOW\" : \"Sign up\" }</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop\n                    show={ this.props.show }\n                    clicked={ this.props.modalClosed } />\n                <div\n                    className={ classes.Modal }\n                    style={ {\n                        transform: this.props.show ? 'translateY(0)' : 'translate(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    } }>\n                    { this.props.children }\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button \n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={ props.clicked }>{ props.children }</button>\n);\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport Button from '../../UI/Button/Button';\n\n\nclass OrderSummary extends Component {\n\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={ igKey }>\n                    <span style={ { textTransform: 'capitalize' } }>{ igKey }</span>: { this.props.ingredients[igKey] }\n                </li>);\n        });\n\n        return (\n            <Aux>\n                <h3> Your order </h3>\n                <p> Delicious burger with the following ingredients</p>\n                <ul>\n                    { ingredientSummary }\n                </ul>\n                <p><strong>Total price: { this.props.price.toFixed(2) }</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button\n                    btnType=\"Danger\"\n                    clicked={ this.props.purchaseCancelled }>CANCEL</Button>\n                <Button\n                    btnType=\"Success\"\n                    clicked={ this.props.purchaseContinue }>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-shop-23df0.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxiliary';\n\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error });\n            });\n        }\n\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptor)\n            axios.interceptors.response.eject(this.resInterceptor)\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null });\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={ this.state.error }\n                        modalClosed={ this.errorConfirmedHandler }>\n                        { this.state.error ? this.state.error.message : null }\n                    </Modal>\n                    <WrappedComponent { ...this.props } />\n                </Aux>\n            )\n        }\n    }\n};\n\nexport default withErrorHandler;","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\nexport const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('userId')\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCS3plG8gQwMZwmo-ORolXfN9lCAxlkP5g'\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCS3plG8gQwMZwmo-ORolXfN9lCAxlkP5g'\n        }\n        axios.post(url, authData)\n            .then(response => {\n                console.log(response);\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authFail(err.response.data.error))\n            })\n    }\n}\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};","// Burger builder\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\n// Contact data\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\n// Order\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\n// Authorization\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\n\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        this.props.onInitIngredients()\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0)\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({ purchasing: true })\n        } else {\n            this.props.onSetAuthRedirectPath('/burger-shop/checkout');\n            this.props.history.push('/burger-shop/auth');\n        };\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/burger-shop/checkout');\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients cant be loaded</p> : <Spinner />;\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={ this.props.ings } />\n                    <BuildControls\n                        ingredientAdded={ this.props.onIngredientAdded }\n                        ingredientRemoved={ this.props.onIngredientRemoved }\n                        disabled={ disabledInfo }\n                        purchasable={ this.updatePurchaseState(this.props.ings) }\n                        ordered={ this.purchaseHandler }\n                        isAuth={ this.props.isAuthenticated }\n                        price={ this.props.price } />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={ this.props.ings }\n                purchaseCancelled={ this.purchaseCancelHandler }\n                purchaseContinue={ this.purchaseContinueHandler }\n                price={ this.props.price } />\n        };\n        return (\n            <Aux>\n                <Modal\n                    show={ this.state.purchasing }\n                    modalClosed={ this.purchaseCancelHandler }>\n                    { orderSummary }\n                </Modal>\n                { burger }\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n};\n\n// Functions that will be executed async\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n//  Asynchronous function\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://burger-shop-23df0.firebaseio.com/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data));\n            })\n            .catch( error =>{\n                dispatch(fetchIngredientsFailed());\n            });\n    }\n};\n\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token , orderData)\n            .then(response => {\n                console.log(response.data);\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error))\n            });\n    }\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"'+ userId +'\"'; \n        axios.get('/orders.json' + queryParams)\n            .then(res => {\n                const fetchedOrders = []\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err));\n            })\n    }\n}","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n            <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n            btnType=\"Danger\"\n            clicked={props.checkoutCancelled}>Cancel</Button>\n            <Button \n            btnType=\"Success\"\n            clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.module.css';\n\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    let validationError = null;\n    if (props.invalid && props.touched) {\n        validationError = <p className={classes.ValidationError}>Please enter your {props.elementConfig.placeholder}!</p>;\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={ inputClasses.join(' ') }\n                { ...props.elementConfig }\n                value={ props.value }\n                onChange={ props.changed } />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={ inputClasses.join(' ') }\n                { ...props.elementConfig }\n                value={ props.value }\n                onChange={ props.changed } />;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={ inputClasses.join(' ') }\n                    value={ props.value }\n                    onChange={ props.changed }>\n                    { props.elementConfig.options.map(option => (\n                        <option key={ option.value } value={ option.value }>{ option.displayValue }</option>\n                    )) }\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={ inputClasses.join(' ') }\n                { ...props.elementConfig }\n                value={ props.value }\n                onChange={ props.changed } />;\n    }\n\n    return (\n        <div className={ classes.Input }>\n            <label className={ classes.Label }>{ props.label }</label>\n            { inputElement }\n            {validationError}\n        </div>\n    )\n};\n\nexport default input;","import React, { Component } from \"react\";\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street address'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                },\n                valid: false,\n                touched: false,\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'cheapest', displayValue: 'Cheapest' }\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: false,\n            },\n        },\n        formIsValid: false,\n    }\n    checkValidity(value, rules) {\n        // if we set to true and check each rules is true and double check it is good. if we dont double chek it will not work\n        let isValid = true;\n\n        if (rules.required) {\n            // trim() no whitespaces at beggining or end if user enters blankspaces it will stay false as there is not any value in form \n            isValid = value.trim() !== '' && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        return isValid\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n\n        }\n        this.props.onOrderBurger(order, this.props.token);\n    }\n    // \n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n        }\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (<form onSubmit={ this.orderHandler }>\n            { formElementsArray.map(formElement => (\n                <Input\n                    key={ formElement.id }\n                    elementType={ formElement.config.elementType }\n                    elementConfig={ formElement.config.elementConfig }\n                    value={ formElement.config.value }\n                    // ! turns true to false and vice versa\n                    invalid={ !formElement.config.valid }\n                    shouldValidate={ formElement.config.validation }\n                    touched={ formElement.config.touched }\n                    changed={ (event) => this.inputChangedHandler(event, formElement.id) } />\n            )) }\n            <Button btnType=\"Success\" clicked={ this.orderHandler } disabled={ !this.state.formIsValid }>ORDER</Button>\n        </form>);\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={ classes.ContactData }>\n                <h4>Enter your contact data</h4>\n                { form }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    };\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/burger-shop/checkout/contact-data');\n    };\n\n    render() {\n        let summary = <Redirect to='/burger-shop' />\n        if (this.props.ings) {\n        const purchasedRedirect = this.props.purchased ? <Redirect to='/burger-shop' /> : null;\n            summary =\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={ this.props.ings }\n                        checkoutCancelled={ this.checkoutCancelledHandler }\n                        checkoutContinued={ this.checkoutContinuedHandler } />\n                    <Route\n                        path={ this.props.match.url + '/contact-data' }\n                        component={ ContactData } />\n                </div>\n        }\n        return summary \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './Order.module.css';\n\n\nconst order = (props) => {\n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n            style={{textTransform: 'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc', padding: '5px'}}\n            key={ ig.name }>{ ig.name } ({ ig.amount })</span>;\n    })\n    return (\n        <div className={ classes.Order }>\n            <p>Ingredients:  { ingredientOutput }</p>\n            <p>Price: <strong>EUR { Number.parseFloat(props.price).toFixed(2) }</strong></p>\n        </div>);\n};\n\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\n\nclass Orders extends Component {\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId)\n    }\n    render() {\n        let orders = <Spinner />\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order\n                    key={ order.id }\n                    ingredients={ order.ingredients }\n                    price={ order.price } />\n            ))\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'e-mail',\n                    placeholder: 'Mail Adress'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n        isSignup: true\n    }\n    componentDidMount(){\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/burger-shop'){\n            this.props.onSetAuthRedirectPath()\n        }\n    }\n\n    checkValidity(value, rules) {\n        // if we set to true and check each rules is true and double check it is good. if we dont double chek it will not work\n        let isValid = true;\n\n        if (rules.required) {\n            // trim() no whitespaces at beggining or end if user enters blankspaces it will stay false as there is not any value in form \n            isValid = value.trim() !== '' && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        return isValid\n    }\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({controls: updatedControls});\n    }\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup)\n    }\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return {isSignup: !prevState.isSignup}\n        })\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        let form = formElementsArray.map(formElement => (\n            <Input\n                key={ formElement.id }\n                elementType={ formElement.config.elementType }\n                elementConfig={ formElement.config.elementConfig }\n                value={ formElement.config.value }\n                // ! turns true to false and vice versa\n                invalid={ !formElement.config.valid }\n                shouldValidate={ formElement.config.validation }\n                touched={ formElement.config.touched }\n                changed={ (event) => this.inputChangedHandler(event, formElement.id) } />\n        ))\n        if (this.props.loading){\n            form = <Spinner />\n        }\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\n        };\n\n        return (\n            <div className={classes.Auth}>\n            { authRedirect}\n            {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">Submit</Button>\n                </form>\n                <Button \n                clicked={this.switchAuthModeHandler}\n                btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'Sign in' : 'Sign up'} </Button>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/burger-shop/'))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Redirect } from 'react-router-dom';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render() {\n        return <Redirect to=\"/burger-shop/\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n// import classes from './App.module.css';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n    render() {\n        let routes = (\n            <Switch>\n                <Route path=\"/burger-shop/auth\" component={ Auth } />\n                <Route path=\"/burger-shop\" exact component={ BurgerBuilder } />\n                <Redirect to='/burger-shop' />\n            </Switch>\n        );\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path=\"/burger-shop/checkout\" component={ Checkout } />\n                    <Route path=\"/burger-shop/orders\" component={ Orders } />\n                    <Route path=\"/burger-shop/logout\" component={ Logout } />\n                    <Route path=\"/burger-shop\" exact component={ BurgerBuilder } />\n                    <Redirect to='/burger-shop' />\n                </Switch>\n            );\n        }\n        return (\n            <div>\n                <Layout>\n                    {/* switch will load the first hit page and exact loads exactly that url.. choose one or both */ }\n                    { routes }\n                </Layout>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 5,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.2,\n    cheese: 0.5,\n    meat: 1.5,\n    bacon: 0.7,\n}\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedState);\n}\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedSt);\n}\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n                ingredients: action.ingredients,\n                error: false,\n                totalPrice: 5,\n                building: false\n            });\n}\n\nconst fetchIngredients = (state, action) => {\n    return updateObject(state, { error: true });\n}\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);            \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredients(state, action);            \n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport { fetchOrdersFail } from '../actions/order';\n\nconst initState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchasedBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\n    return updateObject(state, {\n        loading: false,\n        orders: state.orders.concat(newOrder),\n        purchased: true\n    });\n}\nconst purchasedBurgerFail = (state, action) => {\n    return updateObject(state, { loading: false });\n}\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state, { loading: true });\n}\nconst purchaseBurgerInit = (state, action) => {\n    return updateObject(state, { purchased: false });\n}\nconst fetchOrderStart = (state, action) => {\n    return updateObject(state, { loading: true });\n}\nconst fetchOrderSuccess = (state, action) => {\n    return updateObject(state, {\n        orders: action.orders,\n        loading: false\n    });\n}\nconst fetchOrderFail = (state, action) => {\n    return updateObject(state, { loading: false });\n}\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchasedBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchasedBurgerFail(state, action);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\n        case actionTypes.PURCHASE_INIT: return purchaseBurgerInit(state, action);\n        case actionTypes.FETCH_ORDERS_START: return fetchOrderStart(state, action);\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrderSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrderFail(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true });\n};\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    });\n}\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\nconst authLogout = (state, action) => {\n    return updateObject(state, {token: null, userId: null});\n}\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path})\n}\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\n        default: return state\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}