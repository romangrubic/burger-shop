{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Layout/Layout.module.css","assets/images/Burger.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","axios-orders.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burger","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerTogglerClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDraw","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinue","spinner","Loader","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","console","log","get","then","data","catch","sum","disabledInfo","orderSummary","Spinner","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","validationError","ValidationError","elementConfig","placeholder","elementType","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","url","render","ingredientName","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","fetchedOrders","err","App","component","Orders","BurgerBuilder","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.631d2bf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","module.exports = __webpack_public_path__ + \"static/media/Burger.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\",\"Input\":\"ContactData_Input__2fK5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = (props) => props.children\n\nexport default aux;","import React from 'react';\nimport burger from '../../assets/images/Burger.png'\nimport classes from './Logo.module.css'\n\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burger} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.module.css';\n\n\nconst navigationItem = (props) => (\n    <li className={ classes.NavigationItem }>\n        <NavLink\n            exact\n            to={ props.link }\n            activeClassName={classes.active}>{ props.children }</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\">Burger builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css'\n\nconst drawerToggle = (props) => (\n    <div\n    className={classes.DrawerToggle}\n    onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={ classes.Toolbar }>\n        <DrawerToggle clicked={props.drawerTogglerClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Auxiliary';\n\nconst sideDrawer = (props) => {\n    let attachClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachClasses = [classes.SideDrawer, classes.Open];\n    }\n\n    return (\n        <Aux>\n            <Backdrop\n            show={props.open}\n            clicked={props.closed} />\n            <div className={attachClasses.join(\" \")}>\n                <div className={ classes.Logo }>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDraw: false\n    }\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDraw: false })\n    }\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDraw: !prevState.showSideDraw}\n        });\n    }\n    render() {\n        return (\n            <Aux>\n                <Toolbar \n                drawerTogglerClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer  \n                closed={this.sideDrawerClosedHandler}\n                open={this.state.showSideDraw}/>\n                <main className={ classes.Content }>\n                    { this.props.children }\n                </main>\n            </Aux>)\n    }\n};\n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport classes from './BurgerIngredient.module.css'\n\nclass BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n\n    switch (this.props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={ classes.BreadBottom }></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={ classes.BreadTop }>\n                    <div className={ classes.Seeds1 }></div>\n                    <div className={ classes.Seeds2 }></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={ classes.Meat }></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={ classes.Cheese }></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={ classes.Salad }></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={ classes.Bacon }></div>;\n            break;\n        default:\n            ingredient = null\n\n    }\n    return ingredient;\n    }\n\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={ igKey + i } type={ igKey } />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please add ingredients!</p>\n    };\n    return (\n        <div className={ classes.Burger }>\n            <BurgerIngredient type=\"bread-top\" />\n            { transformedIngredients }\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;\n","import React from 'react';\nimport classes from './BuildControl.module.css'\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}>Less</button>\n        <button \n        className={classes.More}\n        onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl","import React from 'react';\nimport BuildControl from './BuildControl/BuildControl'\nimport classes from './BuildControls.module.css'\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n    <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n    { controls.map(ctrl => (\n        <BuildControl \n        key={ctrl.label} \n        label={ctrl.label}\n        added={() => props.ingredientAdded(ctrl.type)}\n        removed={() => props.ingredientRemoved(ctrl.type)}\n        disabled={props.disabled[ctrl.type]}/>\n    ))}\n    <button \n    className={classes.OrderButton}\n    disabled={!props.purchasable}\n    onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop\n                    show={ this.props.show }\n                    clicked={ this.props.modalClosed } />\n                <div\n                    className={ classes.Modal }\n                    style={ {\n                        transform: this.props.show ? 'translateY(0)' : 'translate(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    } }>\n                    { this.props.children }\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button \n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={ props.clicked }>{ props.children }</button>\n);\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport Button from '../../UI/Button/Button';\n\n\nclass OrderSummary extends Component {\n\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={ igKey }>\n                    <span style={ { textTransform: 'capitalize' } }>{ igKey }</span>: { this.props.ingredients[igKey] }\n                </li>);\n        });\n\n        return (\n            <Aux>\n                <h3> Your order </h3>\n                <p> Delicious burger with the following ingredients</p>\n                <ul>\n                    { ingredientSummary }\n                </ul>\n                <p><strong>Total price: { this.props.price.toFixed(2) }</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button\n                    btnType=\"Danger\"\n                    clicked={ this.props.purchaseCancelled }>CANCEL</Button>\n                <Button\n                    btnType=\"Success\"\n                    clicked={ this.props.purchaseContinue }>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-shop-23df0.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxiliary';\n\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error });\n            });\n        }\n\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptor)\n            axios.interceptors.response.eject(this.resInterceptor)\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null });\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={ this.state.error }\n                        modalClosed={ this.errorConfirmedHandler }>\n                        { this.state.error ? this.state.error.message : null }\n                    </Modal>\n                    <WrappedComponent { ...this.props } />\n                </Aux>\n            )\n        }\n    }\n};\n\nexport default withErrorHandler;","import React, { Component } from \"react\";\nimport Aux from '../../hoc/Auxiliary'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.3,\n    cheese: 0.6,\n    meat: 1.5,\n    bacon: 0.7,\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: null,\n        totalPrice: 3,\n        purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: false,\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        axios.get('https://burger-shop-23df0.firebaseio.com/ingredients.json')\n            .then(response => {\n                this.setState({ ingredients: response.data });\n            })\n            .catch(error =>{\n                this.setState({error: true});\n            });\n    }\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0)\n        this.setState({ purchasable: sum > 0 })\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\n        this.updatePurchaseState(updatedIngredients);\n    };\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\n        this.updatePurchaseState(updatedIngredients);\n    };\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        // alert('You continue!');\n        // .json is needed for Firebase\n\n        // Passing ingredients in URL and parse them in checkout\n        const queryParams= [];\n        for (let i in this.state.ingredients){\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n        const queryString = queryParams.join('&');\n\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients cant be loaded</p> : <Spinner />;\n        if (this.state.ingredients) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={ this.state.ingredients } />\n                    <BuildControls\n                        ingredientAdded={ this.addIngredientHandler }\n                        ingredientRemoved={ this.removeIngredientHandler }\n                        disabled={ disabledInfo }\n                        purchasable={ this.state.purchasable }\n                        ordered={ this.purchaseHandler }\n                        price={ this.state.totalPrice } />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={ this.state.ingredients }\n                purchaseCancelled={ this.purchaseCancelHandler }\n                purchaseContinue={ this.purchaseContinueHandler }\n                price={ this.state.totalPrice } />\n        };\n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        }\n        return (\n            <Aux>\n                <Modal\n                    show={ this.state.purchasing }\n                    modalClosed={ this.purchaseCancelHandler }>\n                    { orderSummary }\n                </Modal>\n                { burger }\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n            <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n            btnType=\"Danger\"\n            clicked={props.checkoutCancelled}>Cancel</Button>\n            <Button \n            btnType=\"Success\"\n            clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.module.css';\n\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    let validationError = null;\n    if (props.invalid && props.touched) {\n        validationError = <p className={classes.ValidationError}>Please enter your {props.elementConfig.placeholder}!</p>;\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={ inputClasses.join(' ') }\n                { ...props.elementConfig }\n                value={ props.value }\n                onChange={ props.changed } />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={ inputClasses.join(' ') }\n                { ...props.elementConfig }\n                value={ props.value }\n                onChange={ props.changed } />;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={ inputClasses.join(' ') }\n                    value={ props.value }\n                    onChange={ props.changed }>\n                    { props.elementConfig.options.map(option => (\n                        <option key={ option.value } value={ option.value }>{ option.displayValue }</option>\n                    )) }\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={ inputClasses.join(' ') }\n                { ...props.elementConfig }\n                value={ props.value }\n                onChange={ props.changed } />;\n    }\n\n    return (\n        <div className={ classes.Input }>\n            <label className={ classes.Label }>{ props.label }</label>\n            { inputElement }\n            {validationError}\n        </div>\n    )\n};\n\nexport default input;","import React, { Component } from \"react\";\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street address'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                },\n                valid: false,\n                touched: false,\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'cheapest', displayValue: 'Cheapest' }\n                    ]\n                },\n                value: '',\n                validation: {},\n                valid: false,\n            },\n        },\n        formIsValid: false,\n        loading: false,\n    }\n    checkValidity(value, rules){\n        // if we set to true and check each rules is true and double check it is good. if we dont double chek it will not work\n        let isValid = true;\n\n        if (rules.required) {\n            // trim() no whitespaces at beggining or end if user enters blankspaces it will stay false as there is not any value in form \n            isValid = value.trim() !== '' && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        return isValid\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true })\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            orderData: formData\n\n        }\n        axios.post('/orders.json', order)\n            .then(response =>\n                this.setState({ loading: false }))\n        this.props.history.push('/')\n            ;\n    }\n    // \n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (<form onSubmit={this.orderHandler}>\n            { formElementsArray.map(formElement => (\n                <Input\n                    key={ formElement.id }\n                    elementType={ formElement.config.elementType }\n                    elementConfig={ formElement.config.elementConfig }\n                    value={ formElement.config.value }\n                    // ! turns true to false and vice versa\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={ (event) => this.inputChangedHandler(event, formElement.id) } />\n            )) }\n            <Button btnType=\"Success\" clicked={ this.orderHandler } disabled={!this.state.formIsValid}>ORDER</Button>\n        </form>);\n        if (this.state.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={ classes.ContactData }>\n                <h4>Enter your contact data</h4>\n                { form }\n            </div>\n        );\n    }\n}\n\nexport default ContactData;","import React, { Component } from \"react\";\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component{\n    state={\n        ingredients: null,\n        totalPrice: 0\n    }\n    componentWillMount(){\n        // those ingredient which we passed from burgerbuilder in the URL\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients = {};\n        let price= 0;\n        for (let param of query.entries()){\n            // ['salad', '1']\n            if (param[0] === 'price'){\n                price = param[1]\n            } else {\n                ingredients[param[0]] = +param[1]\n            }            \n        }\n        this.setState({ingredients: ingredients, totalPrice: price});\n    }\n\n    checkoutCancelledHandler = () =>{\n        this.props.history.goBack();\n    };\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    };\n\n    render(){\n        return (\n            <div>\n                <CheckoutSummary \n                ingredients={this.state.ingredients}\n                checkoutCancelled={this.checkoutCancelledHandler}\n                checkoutContinued={this.checkoutContinuedHandler}/>\n                <Route \n                path={this.props.match.url + '/contact-data'} \n                render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)} />\n            </div>\n        )\n    }\n}\n\nexport default Checkout;","import React from 'react';\nimport classes from './Order.module.css';\n\n\nconst order = (props) => {\n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n            style={{textTransform: 'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc', padding: '5px'}}\n            key={ ig.name }>{ ig.name } ({ ig.amount })</span>;\n    })\n    return (\n        <div className={ classes.Order }>\n            <p>Ingredients:  { ingredientOutput }</p>\n            <p>Price: <strong>EUR { Number.parseFloat(props.price).toFixed(2) }</strong></p>\n        </div>);\n};\n\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n    componentDidMount(){\n        // Fetching orders from Firebase db\n        axios.get('/orders.json')\n        .then(res => {\n            const fetchedOrders=[]\n            for (let key in res.data){\n                fetchedOrders.push({\n                    ...res.data[key],\n                id: key\n            });\n            }\n            this.setState({loading: false, orders: fetchedOrders});\n        })\n        .catch(err =>{\n            this.setState({loading: false});\n        })\n    }\n    render() {\n        return(\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price}/>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n// import classes from './App.module.css';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport { Route, Switch } from 'react-router-dom';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Layout>\n                    {/* switch will load the first hit page and exact loads exactly that url.. choose one or both */}\n                    <Switch>\n                        <Route path=\"/checkout\" component={Checkout} />\n                        <Route path=\"/orders\" component={Orders} />\n                        <Route path=\"/\" exact component={BurgerBuilder} />\n                    </Switch>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(app,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}